"use strict";

const core = require("../core");
const loader = core.getLoader();
const $ = loader.store;

const gulp = require("gulp");
const merge = require("merge-stream");

loader.depend({
	path: "path",

	rename: "gulp-rename",
	gutil: "gulp-util"
});

core.buildTasks.push("build:static");

const buildTransform = (transform) => {
	$.gutil.log($.gutil.colors.green(core.getName(transform) + ": building..."));

	let buildPath = core.out;

	let dest = $.path.join(buildPath, transform.dest);

	let stream = gulp.src(transform.source);

	if (transform.config && transform.config.rename) {
		stream = stream.pipe($.rename(transform.config.rename));
	}

	stream = stream.pipe(gulp.dest(dest))
		.pipe(core.browserSync.stream())
		.pipe(core.getNotify(core.getName(transform) + ": done!"));

	return stream;
};

gulp.task("build:static", () => {
	const pipelines = core.getPipelines("static");
	let merged = merge();

	if (pipelines.length > 0) {
		loader.load();
	}

	for (let transform of pipelines) {
		merged.add(buildTransform(transform));

		if (core.watch) {
			gulp.watch(transform.source, e => {
				buildTransform(transform);
			});
		}
	}

	return merged;
});